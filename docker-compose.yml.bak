version: "3.8"

services:
  db:
    image: mongo:5-focal
    environment:
      - MONGO_INITDB_DATABASE
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
      - MONGO_USERNAME
      - MONGO_PASSWORD
      - MONGO_INITDB_DATABASE=shared_finances-mongo
      - MONGO_INITDB_ROOT_USERNAME=${db_user}
      - MONGO_INITDB_ROOT_PASSWORD=${db_password}
    container_name: shared_finances-mongo
    restart: always
    command: "mongod --bind_ip_all --replSet replicaSet01 --keyFile /data/replica.key"
    volumes:
      - mongodb_data_container:/data/db
      - $PWD/.docker/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
      - $PWD/.docker/mongo/replica.key:/data/replica.key
    ports:
      - 27017:27017
    expose:
      - 27017
    networks:
      - database
#  db_replica_configure:
#    image: mongo:6.0.7-jammy
#    entrypoint:
#      - /mongodb/initiate_replica.sh
#    volumes:
#      - mongodb_data_container:/data/db
#      - .docker/mongo/initiate_replica.sh:/mongodb/initiate_replica.sh
#    networks:
#      - database
#    depends_on:
#      - db
#    environment:
#      - DB_URL=mongodb://${db_user}:${db_password}@shared_finances-mongo
#  api:
#    container_name: shared_finances-api
#    build:
#      context: ./backend
#      dockerfile: ./Dockerfile
#    ports:
#      - 3000:3000
#    networks:
#      - api
#      - database
#    depends_on:
#      - db
#      - db_replica_configure
#    environment:
#      - DB_URL=mongodb://${db_user}:${db_password}@shared_finances-mongo
#  nginx:
#    container_name: shared_finances-nginx
#    build:
#      context: ./frontend
#      dockerfile: ./Dockerfile
#    networks:
#      - api
#      - front
#    depends_on:
#      - api
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
#  certbot:
#    image: certbot/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot

networks:
  api:
    internal: true
  database:
  front:

volumes:
  mongodb_data_container:
  credentials: